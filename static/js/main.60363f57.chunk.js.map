{"version":3,"sources":["logo.svg","models/characterProfile.js","components/createProfile.js","App.js","reportWebVitals.js","index.js"],"names":["charProfile","data","baseAtk","flatAtk","percAtk","critC","critD","percEle","console","log","sheetAtk","critPower","elePower","Math","round","useInput","id","stringId","useState","state","setState","name","type","onChange","e","currentTarget","value","createProfile","profile","setProfile","baseAtkComponent","baseAtkState","flatAtkComponent","flatAtkState","percAtkComponent","percAtkState","critRateComponent","critRateState","critDmgComponent","critDmgState","eleDmgComponent","eleDmgState","useEffect","result","parseInt","Fragment","useProfile","components","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAAe,I,YCuCAA,EAvCK,SAAAC,GAClB,IAAKA,EAAM,OAAO,KADQ,IAElBC,EAAqDD,EAArDC,QAASC,EAA4CF,EAA5CE,QAASC,EAAmCH,EAAnCG,QAASC,EAA0BJ,EAA1BI,MAAOC,EAAmBL,EAAnBK,MAAOC,EAAYN,EAAZM,QAIjD,GAFAC,QAAQC,IAAI,QAASR,IAEhBC,IAAYC,IAAYC,IAAYC,IAAUC,IAAUC,EAC3D,OAAO,KAET,IACMG,EAAWR,GADGA,EAAUE,EAAUD,GAElCQ,EAAY,EAAIN,EAAQC,EAK9B,OAJAE,QAAQC,IAAI,YAAaC,GACzBF,QAAQC,IAAI,aAAcE,GAGnB,CACLT,UACAC,UACAC,QAASA,EACTC,MAAOA,EACPC,MAAOA,EACPC,QAASA,EACTK,SATeC,KAAKC,MAAMJ,EAAWC,GAAa,EAAIJ,MCXpDQ,EAAW,SAACC,EAAIC,GAAc,IAAD,EACPC,mBAAS,IADF,mBAC1BC,EAD0B,KACnBC,EADmB,KAK3BC,EAAOJ,GAAsB,WAAaD,EAQhD,MAAO,CANL,iCACGK,EACD,uBAAOC,KAAK,OAAON,GAAIA,EAAIK,KAAML,EAAIO,SAPxB,SAAAC,GACfJ,EAASI,EAAEC,cAAcC,aAUZP,IA6DFQ,EAbO,WAAO,IAAD,EA7CT,WAAO,IAAD,EACOT,mBAAS,MADhB,mBAChBU,EADgB,KACPC,EADO,OAGkBd,EAAS,WAH3B,mBAGhBe,EAHgB,KAGEC,EAHF,OAIkBhB,EAAS,WAJ3B,mBAIhBiB,EAJgB,KAIEC,EAJF,OAKkBlB,EAAS,WAL3B,mBAKhBmB,EALgB,KAKEC,EALF,OAMoBpB,EAAS,SAN7B,mBAMhBqB,EANgB,KAMGC,EANH,OAOkBtB,EAAS,SAP3B,mBAOhBuB,EAPgB,KAOEC,EAPF,OAQgBxB,EAAS,UARzB,mBAQhByB,EARgB,KAQCC,EARD,KA0CvB,OAhCAC,qBAAU,WACR,IAAMC,EAAS3C,EAAY,CACzBE,QAAS0C,SAASb,GAClB5B,QAASyC,SAASX,GAClB7B,QAAS+B,EAAe,IACxB9B,MAAOgC,EAAgB,IACvB/B,MAAOiC,EAAe,IACtBhC,QAASkC,EAAc,MAGrBE,GAAQd,EAAWc,KACtB,CACDZ,EACAE,EACAE,EACAE,EACAE,EACAE,EACAZ,IAcK,CAACD,EAVN,eAAC,IAAMiB,SAAP,WACGf,EACAE,EACAE,EACAE,EACAE,EACAE,MAQyBM,GADJ,mBACnBlB,EADmB,KACVmB,EADU,KAK1B,OAFAvC,QAAQC,IAAI,WAAYmB,GAGtB,eAAC,IAAMiB,SAAP,WACGE,EACAnB,GAAW,sBAAwBA,EAAQhB,aC5DnCoC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SAAgCtB,SCKvBuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.60363f57.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const charProfile = data => {\r\n  if (!data) return null;\r\n  const { baseAtk, flatAtk, percAtk, critC, critD, percEle } = data;\r\n\r\n  console.log('data:', data);\r\n\r\n  if (!baseAtk || !flatAtk || !percAtk || !critC || !critD || !percEle)\r\n    return null;\r\n\r\n  const artifactAtk = baseAtk * percAtk + flatAtk;\r\n  const sheetAtk = baseAtk + artifactAtk;\r\n  const critPower = 1 + critC * critD;\r\n  console.log('sheetAtk:', sheetAtk);\r\n  console.log('critPower:', critPower);\r\n  const elePower = Math.round(sheetAtk * critPower * (1 + percEle));\r\n\r\n  return {\r\n    baseAtk,\r\n    flatAtk,\r\n    percAtk: percAtk,\r\n    critC: critC,\r\n    critD: critD,\r\n    percEle: percEle,\r\n    elePower,\r\n  };\r\n\r\n  //   return {\r\n  //     charId,\r\n  //     level,\r\n  //     baseAtk,\r\n  //     atkPerc,\r\n  //     flatAtk,\r\n  //     critC,\r\n  //     critD,\r\n  //     elePerc,\r\n  //     phyPerc,\r\n  //   };\r\n};\r\n\r\nexport default charProfile;\r\n","import React, { useEffect, useState } from 'react';\r\nimport charProfile from '../models/characterProfile';\r\n\r\nconst useInput = (id, stringId) => {\r\n  const [state, setState] = useState('');\r\n  const onChange = e => {\r\n    setState(e.currentTarget.value);\r\n  };\r\n  const name = stringId ? stringId : 'profile.' + id;\r\n  const input = (\r\n    <span>\r\n      {name}\r\n      <input type=\"text\" id={id} name={id} onChange={onChange}></input>\r\n    </span>\r\n  );\r\n\r\n  return [input, state];\r\n};\r\n\r\nconst useProfile = () => {\r\n  const [profile, setProfile] = useState(null);\r\n\r\n  const [baseAtkComponent, baseAtkState] = useInput('baseAtk');\r\n  const [flatAtkComponent, flatAtkState] = useInput('flatAtk');\r\n  const [percAtkComponent, percAtkState] = useInput('percAtk');\r\n  const [critRateComponent, critRateState] = useInput('critC');\r\n  const [critDmgComponent, critDmgState] = useInput('critD');\r\n  const [eleDmgComponent, eleDmgState] = useInput('eleDmg');\r\n\r\n  useEffect(() => {\r\n    const result = charProfile({\r\n      baseAtk: parseInt(baseAtkState),\r\n      flatAtk: parseInt(flatAtkState),\r\n      percAtk: percAtkState / 100,\r\n      critC: critRateState / 100,\r\n      critD: critDmgState / 100,\r\n      percEle: eleDmgState / 100,\r\n    });\r\n\r\n    if (result) setProfile(result);\r\n  }, [\r\n    baseAtkState,\r\n    flatAtkState,\r\n    percAtkState,\r\n    critRateState,\r\n    critDmgState,\r\n    eleDmgState,\r\n    setProfile,\r\n  ]);\r\n\r\n  const components = (\r\n    <React.Fragment>\r\n      {baseAtkComponent}\r\n      {flatAtkComponent}\r\n      {percAtkComponent}\r\n      {critRateComponent}\r\n      {critDmgComponent}\r\n      {eleDmgComponent}\r\n    </React.Fragment>\r\n  );\r\n\r\n  return [profile, components];\r\n};\r\n\r\nconst createProfile = () => {\r\n  const [profile, components] = useProfile();\r\n\r\n  console.log('profile:', profile);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {components}\r\n      {profile && 'YOUR ELE POWER IS: ' + profile.elePower}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default createProfile;\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport createProfile from './components/createProfile';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">{createProfile()}</header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}