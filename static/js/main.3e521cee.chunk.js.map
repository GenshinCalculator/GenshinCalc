{"version":3,"sources":["helpers/translate.js","models/characterProfile.js","components/Profile.js","helpers/stringHelper.js","App.js","helpers/storageHelper.js","reportWebVitals.js","index.js","localization/en-US.js"],"names":["translate","intl","key","values","formatMessage","id","getElePower","profile","baseAtk","percAtk","flatAtk","critC","critD","percEle","artifactAtk","sheetAtk","critPower","Math","min","elePower","round","console","log","getSpiralBuffs","basePow","critPercDiff","atk20Diff","atk30Diff","atk40Diff","getSubstatGrowth","atkPercDiff","critRateDiff","critDmgDiff","charProfile","data","uuidv4","spiralBuffs","substats","useInput","initState","stringId","useIntl","useState","state","setState","onChange","e","currentTarget","value","name","input","type","maxLength","size","Profile","onProfileChange","profileData","setProfileData","initProfile","setProfile","baseAtkComponent","baseAtkState","flatAtkComponent","flatAtkState","percAtkComponent","percAtkState","critRateComponent","critRateState","critDmgComponent","critDmgState","eleDmgComponent","eleDmgState","useEffect","result","parseInt","components","Fragment","useProfile","profileInputs","profileChangeRef","useRef","current","power","max","textKey","stat","gain","num","toFixed","App","localProfiles","setProfiles","profilesJson","window","localStorage","getItem","JSON","parse","item","setItem","storageAdd","stringify","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","locale","defaultLocale","messages","document","getElementById"],"mappings":"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","file":"static/js/main.3e521cee.chunk.js","sourcesContent":["const translate = (intl, key, values) => {\r\n  return intl.formatMessage({ id: key }, values);\r\n};\r\n\r\nexport default translate;\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nconst charProfile = data => {\r\n  if (!data) return null;\r\n  const { baseAtk, flatAtk, percAtk, critC, critD, percEle } = data;\r\n  let { id } = data;\r\n\r\n  console.log('id:', id);\r\n\r\n  if (!id) {\r\n    id = uuidv4();\r\n  }\r\n\r\n  if (!baseAtk || !flatAtk || !percAtk || !critC || !critD || !percEle)\r\n    return null;\r\n\r\n  const profile = {\r\n    id,\r\n    baseAtk,\r\n    flatAtk,\r\n    percAtk: percAtk,\r\n    critC: critC,\r\n    critD: critD,\r\n    percEle: percEle,\r\n  };\r\n\r\n  return {\r\n    ...profile,\r\n    elePower: getElePower(profile),\r\n    spiralBuffs: getSpiralBuffs(profile),\r\n    substats: getSubstatGrowth(profile),\r\n  };\r\n};\r\n\r\nconst getElePower = profile => {\r\n  const { baseAtk, percAtk, flatAtk, critC, critD, percEle } = profile;\r\n  const artifactAtk = baseAtk * percAtk + flatAtk;\r\n  const sheetAtk = baseAtk + artifactAtk;\r\n  const critPower = 1 + Math.min(1, critC) * critD;\r\n  const elePower = Math.round(sheetAtk * critPower * (1 + percEle));\r\n\r\n  console.log(artifactAtk, sheetAtk, critPower, elePower);\r\n  return elePower;\r\n};\r\n\r\nconst getSpiralBuffs = profile => {\r\n  const { percAtk, critC, critD } = profile;\r\n  const basePow = getElePower(profile);\r\n\r\n  const critBuffPow = getElePower({\r\n    ...profile,\r\n    critC: critC + 0.08,\r\n    critD: critD + 0.15,\r\n  });\r\n\r\n  const atk20Pow = getElePower({\r\n    ...profile,\r\n    percAtk: percAtk + 0.2,\r\n  });\r\n\r\n  const atk30Pow = getElePower({\r\n    ...profile,\r\n    percAtk: percAtk + 0.3,\r\n  });\r\n\r\n  const atk40Pow = getElePower({\r\n    ...profile,\r\n    percAtk: percAtk + 0.4,\r\n  });\r\n\r\n  return {\r\n    critPercDiff: critBuffPow / basePow - 1,\r\n    atk20Diff: atk20Pow / basePow - 1,\r\n    atk30Diff: atk30Pow / basePow - 1,\r\n    atk40Diff: atk40Pow / basePow - 1,\r\n  };\r\n};\r\n\r\nconst getSubstatGrowth = profile => {\r\n  const { baseAtk, percAtk, flatAtk, critC, critD, percEle } = profile;\r\n  const basePow = getElePower(profile);\r\n\r\n  const atkPercSubPow = getElePower({\r\n    ...profile,\r\n    percAtk: percAtk + 0.0498,\r\n  });\r\n\r\n  const critRateSubPow = getElePower({\r\n    ...profile,\r\n    critC: critC + 0.033,\r\n  });\r\n\r\n  const critDmgSubPow = getElePower({\r\n    ...profile,\r\n    critD: critD + 0.066,\r\n  });\r\n\r\n  return {\r\n    atkPercDiff: atkPercSubPow / basePow - 1,\r\n    critRateDiff: critRateSubPow / basePow - 1,\r\n    critDmgDiff: critDmgSubPow / basePow - 1,\r\n  };\r\n};\r\n\r\nexport default charProfile;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport translate from '../helpers/translate';\r\nimport charProfile from '../models/characterProfile';\r\nimport { decimalToPercent } from '../helpers/stringHelper';\r\nimport { storageAdd } from '../helpers/storageHelper';\r\n\r\nconst useInput = (id, initState = '', stringId) => {\r\n  const intl = useIntl();\r\n  const [state, setState] = useState(initState);\r\n\r\n  const onChange = e => {\r\n    setState(e.currentTarget.value);\r\n  };\r\n  const key = stringId ? stringId : 'profile.' + id;\r\n  const name = translate(intl, key);\r\n  const input = (\r\n    <span>\r\n      {name}\r\n      <input\r\n        type=\"text\"\r\n        id={id}\r\n        name={id}\r\n        onChange={onChange}\r\n        maxLength=\"7\"\r\n        size=\"5\"\r\n        value={state}\r\n      ></input>\r\n    </span>\r\n  );\r\n\r\n  return [input, state, setState];\r\n};\r\n\r\nconst useProfile = (initProfile = {}) => {\r\n  const [profile, setProfile] = useState(null);\r\n\r\n  const [baseAtkComponent, baseAtkState] = useInput(\r\n    'baseAtk',\r\n    initProfile.baseAtk,\r\n  );\r\n  const [flatAtkComponent, flatAtkState] = useInput(\r\n    'flatAtk',\r\n    initProfile.flatAtk,\r\n  );\r\n  const [percAtkComponent, percAtkState] = useInput(\r\n    'percAtk',\r\n    initProfile.percAtk ? initProfile.percAtk * 100 : '',\r\n  );\r\n  const [critRateComponent, critRateState] = useInput(\r\n    'critC',\r\n    initProfile.critC ? initProfile.critC * 100 : '',\r\n  );\r\n  const [critDmgComponent, critDmgState] = useInput(\r\n    'critD',\r\n    initProfile.critD ? initProfile.critD * 100 : '',\r\n  );\r\n  const [eleDmgComponent, eleDmgState] = useInput(\r\n    'eleDmg',\r\n    initProfile.percEle ? initProfile.percEle * 100 : '',\r\n  );\r\n\r\n  useEffect(() => {\r\n    const result = charProfile({\r\n      baseAtk: parseInt(baseAtkState),\r\n      flatAtk: parseInt(flatAtkState),\r\n      percAtk: percAtkState / 100,\r\n      critC: critRateState / 100,\r\n      critD: critDmgState / 100,\r\n      percEle: eleDmgState / 100,\r\n    });\r\n\r\n    if (result) setProfile(result);\r\n  }, [\r\n    baseAtkState,\r\n    flatAtkState,\r\n    percAtkState,\r\n    critRateState,\r\n    critDmgState,\r\n    eleDmgState,\r\n    setProfile,\r\n  ]);\r\n\r\n  const components = (\r\n    <React.Fragment>\r\n      {baseAtkComponent}\r\n      {flatAtkComponent}\r\n      {percAtkComponent}\r\n      {critRateComponent}\r\n      {critDmgComponent}\r\n      {eleDmgComponent}\r\n    </React.Fragment>\r\n  );\r\n\r\n  return [profile, components];\r\n};\r\n\r\nconst Profile = ({ data, onProfileChange }) => {\r\n  const intl = useIntl();\r\n\r\n  const [profileData, setProfileData] = useState(data);\r\n\r\n  const onProfileUpdate = profileInputs => {\r\n    setProfileData(charProfile(profileInputs), profileData.id);\r\n  };\r\n  const [profile, components] = useProfile(data, onProfileUpdate);\r\n\r\n  const getSubstatGrowth = profile => {\r\n    if (profile) {\r\n      const { atkPercDiff, critRateDiff, critDmgDiff } = profile.substats;\r\n\r\n      const max = Math.max(atkPercDiff, critRateDiff, critDmgDiff);\r\n      let textKey = '';\r\n      switch (max) {\r\n        case atkPercDiff:\r\n          textKey = 'profile.substat.atkPercGain';\r\n          break;\r\n        case critRateDiff:\r\n          textKey = 'profile.substat.critRateGain';\r\n          break;\r\n        case critDmgDiff:\r\n          textKey = 'profile.substat.critDmgGain';\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      const stat = translate(intl, textKey, { gain: decimalToPercent(max) });\r\n      const substat = translate(intl, 'profile.substat.best', { stat: stat });\r\n\r\n      return substat;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const profileChangeRef = useRef();\r\n  profileChangeRef.current = onProfileChange;\r\n  useEffect(() => {\r\n    if (profile) profileChangeRef.current(profile);\r\n  }, [profile]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {components}\r\n      <br />\r\n      {profile &&\r\n        translate(intl, 'profile.summary.elePower', {\r\n          power: profile.elePower,\r\n        })}\r\n      <br />\r\n      {getSubstatGrowth(profile)}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","export const decimalToPercent = num => {\r\n  return (num * 100).toFixed(2) + '%';\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './App.css';\r\nimport createProfile from './components/createProfile';\r\nimport Profile from './components/Profile';\r\nimport { storageAdd, storageGet } from './helpers/storageHelper';\r\n\r\nfunction App() {\r\n  const [localProfiles, setProfiles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const profilesJson = window.localStorage.getItem('profiles');\r\n    if (profilesJson) {\r\n      setProfiles(JSON.parse(profilesJson));\r\n    }\r\n  }, []);\r\n\r\n  const onProfileChange = profile => {\r\n    const profilesJson = storageGet('profiles');\r\n    storageAdd('profiles', JSON.stringify([profile]));\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {localProfiles && localProfiles[0] && (\r\n        <Profile\r\n          id={localProfiles[0].id}\r\n          data={localProfiles[0]}\r\n          onProfileChange={onProfileChange}\r\n        ></Profile>\r\n      )}\r\n      <p></p>\r\n      <Profile onProfileChange={onProfileChange}></Profile>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const addProfile = (id, profile) => {};\n\nexport const storageGet = id => {\n  window.localStorage.getItem(id);\n};\n\nexport const storageAdd = (id, item) => {\n  window.localStorage.setItem(id, item);\n};\n\nexport const storageDelete = id => {\n  window.localStorage.removeItem(id);\n};\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { IntlProvider } from 'react-intl';\r\n\r\nimport messages from './localization/en-US';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <IntlProvider locale=\"en-US\" defaultLocale=\"en-US\" messages={messages}>\r\n      <App />\r\n    </IntlProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export default {\r\n  'profile.character': 'Character',\r\n  'profile.level': 'Level',\r\n  'profile.baseAtk': 'Base Attack',\r\n  'profile.percAtk': 'Atk %',\r\n  'profile.flatAtk': 'Flat Attack',\r\n  'profile.critC': 'Crit Rate',\r\n  'profile.critD': 'Crit Damage',\r\n  'profile.eleDmg': 'Ele %',\r\n  'profile.summary.elePower': 'Elemental Power: {power}',\r\n\r\n  'profile.substat.best': 'Next substat to target -- {stat}',\r\n  'profile.substat.atkPercGain': '(4.98%) Attack Percent Improvement: {gain}',\r\n  'profile.substat.critRateGain': '(3.3%) Crit Rate Improvement: {gain}',\r\n  'profile.substat.critDmgGain': '(6.6%) Crit Dmg Improvement: {gain}',\r\n};\r\n"],"sourceRoot":""}